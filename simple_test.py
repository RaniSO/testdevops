#!/usr/bin/env python3
"""
Simple test to verify calculator functionality.
"""

# Test basic import
try:
    from calculator import Calculator, CalculatorError
    print("‚úÖ Calculator module imported successfully")
except Exception as e:
    print(f"‚ùå Error importing calculator: {e}")
    exit(1)

# Test basic functionality
try:
    calc = Calculator()
    
    # Test basic operations
    result = calc.add(5, 3)
    print(f"‚úÖ Addition: 5 + 3 = {result}")
    
    result = calc.multiply(4, 6)
    print(f"‚úÖ Multiplication: 4 √ó 6 = {result}")
    
    result = calc.divide(15, 3)
    print(f"‚úÖ Division: 15 √∑ 3 = {result}")
    
    result = calc.power(2, 8)
    print(f"‚úÖ Power: 2 ^ 8 = {result}")
    
    result = calc.square_root(16)
    print(f"‚úÖ Square root: ‚àö16 = {result}")
    
    # Test error handling
    try:
        calc.divide(5, 0)
        print("‚ùå Division by zero should have raised an error")
    except CalculatorError:
        print("‚úÖ Division by zero error handled correctly")
    
    # Test memory
    calc.memory_store(42)
    result = calc.memory_recall()
    print(f"‚úÖ Memory operations: stored and recalled {result}")
    
    # Test history
    history = calc.get_history()
    print(f"‚úÖ History tracking: {len(history)} operations recorded")
    
    print("\nüéâ All basic tests passed!")
    
except Exception as e:
    print(f"‚ùå Error in basic functionality: {e}")
    import traceback
    traceback.print_exc()
    exit(1)

# Test CLI import
try:
    from calculator_cli import CalculatorCLI
    print("‚úÖ CLI module imported successfully")
except Exception as e:
    print(f"‚ùå Error importing CLI: {e}")
    import traceback
    traceback.print_exc()

print("\n‚úÖ Calculator application is working correctly!")
print("Run 'python calculator_cli.py' to use the interactive calculator.")